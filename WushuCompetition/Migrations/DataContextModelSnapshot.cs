// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WushuCompetition.Data;

#nullable disable

namespace WushuCompetition.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wushu_api.Models.AgeCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("GraterThanAge")
                        .HasColumnType("integer");

                    b.Property<int>("LessThanAge")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AgeCategories");
                });

            modelBuilder.Entity("Wushu_api.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AgeCategoryId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompetitionId")
                        .HasColumnType("uuid");

                    b.Property<int>("GraterThanWeight")
                        .HasColumnType("integer");

                    b.Property<int>("LessThanWeight")
                        .HasColumnType("integer");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AgeCategoryId");

                    b.HasIndex("CompetitionId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Wushu_api.Models.Competition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("Wushu_api.Models.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompetitorFirstId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompetitorSecondId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParticipantWinnerId")
                        .HasColumnType("uuid");

                    b.Property<string>("Referee")
                        .HasColumnType("text");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CompetitorFirstId");

                    b.HasIndex("CompetitorSecondId");

                    b.HasIndex("ParticipantWinnerId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("Wushu_api.Models.Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<int>("CategoryWeight")
                        .HasColumnType("integer");

                    b.Property<string>("Club")
                        .HasColumnType("text");

                    b.Property<string>("Color")
                        .HasColumnType("text");

                    b.Property<bool>("CompeteInNextMatch")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("Wushu_api.Models.Round", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("MatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ParticipantWinnerId")
                        .HasColumnType("uuid");

                    b.Property<int>("PointParticipantFirst")
                        .HasColumnType("integer");

                    b.Property<int>("PointParticipantSecond")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("ParticipantWinnerId");

                    b.ToTable("Rounds");
                });

            modelBuilder.Entity("Wushu_api.Models.Category", b =>
                {
                    b.HasOne("Wushu_api.Models.AgeCategory", "AgeCategory")
                        .WithMany("Categories")
                        .HasForeignKey("AgeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wushu_api.Models.Competition", "Competition")
                        .WithMany("Categories")
                        .HasForeignKey("CompetitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeCategory");

                    b.Navigation("Competition");
                });

            modelBuilder.Entity("Wushu_api.Models.Match", b =>
                {
                    b.HasOne("Wushu_api.Models.Participant", "CompetitorFirst")
                        .WithMany("MatchesAsFirstCompetitor")
                        .HasForeignKey("CompetitorFirstId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Wushu_api.Models.Participant", "CompetitorSecond")
                        .WithMany("MatchesAsSecondCompetitor")
                        .HasForeignKey("CompetitorSecondId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Wushu_api.Models.Participant", "ParticipantWinner")
                        .WithMany("MatchesAsWinner")
                        .HasForeignKey("ParticipantWinnerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CompetitorFirst");

                    b.Navigation("CompetitorSecond");

                    b.Navigation("ParticipantWinner");
                });

            modelBuilder.Entity("Wushu_api.Models.Participant", b =>
                {
                    b.HasOne("Wushu_api.Models.Category", "Category")
                        .WithMany("Participants")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Wushu_api.Models.Round", b =>
                {
                    b.HasOne("Wushu_api.Models.Match", "Match")
                        .WithMany("Rounds")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wushu_api.Models.Participant", "ParticipantWinner")
                        .WithMany()
                        .HasForeignKey("ParticipantWinnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("ParticipantWinner");
                });

            modelBuilder.Entity("Wushu_api.Models.AgeCategory", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Wushu_api.Models.Category", b =>
                {
                    b.Navigation("Participants");
                });

            modelBuilder.Entity("Wushu_api.Models.Competition", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("Wushu_api.Models.Match", b =>
                {
                    b.Navigation("Rounds");
                });

            modelBuilder.Entity("Wushu_api.Models.Participant", b =>
                {
                    b.Navigation("MatchesAsFirstCompetitor");

                    b.Navigation("MatchesAsSecondCompetitor");

                    b.Navigation("MatchesAsWinner");
                });
#pragma warning restore 612, 618
        }
    }
}
